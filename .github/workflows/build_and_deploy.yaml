on: [push, pull_request, workflow_dispatch]


name: Simple app CI/CD workflow

jobs:
  build_and_deploy_to_Dev:
    name: Build and push Docker Image to Dev
    if: github.ref == 'refs/heads/dev'
    environment: dev
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          ref: dev

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ github.sha }}-dev
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    - name: Checkout Infra repo
      uses: actions/checkout@v3
      with:
        repository: zedex11/demo_infra
        token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
        path: ecs
        ref: dev
    
    - name: check
      id: check_path
      run: |
        pwd 
        ls -a
        cd ecs/

    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: |
        pwd 
        ls -a
        cd ecs/
        ls -a
        terraform init \
            -backend-config "bucket=dev-infra-test-1" \
            -backend-config "region=us-east-1" \
            -backend-config "key=tfstate/ecs/cluster/dev/terraform.tfstate"

    - name: Terraform Plan
      id: plan
      run: | 
        pwd 
        ls -a
        terraform plan
      continue-on-error: true
